{"version":3,"sources":["IntroJoyride.jsx","WebMapView.js","App.js","serviceWorker.js","index.js"],"names":["IntroJoyride","props","useState","content","className","alt","src","process","placement","target","disableBeacon","scale","icon","steps","callback","data","status","type","STATUS","FINISHED","SKIPPED","includes","toggleIntro","continuous","run","runIntro","scrollToFirstStep","showProgress","showSkipButton","styles","options","zIndex","width","getRandomInt","max","Math","floor","random","WebMapView","WPATilesUrl","WPAMapsLandParcelsUrl","sectionsLayerUrl","mapRef","React","createRef","workflow","editThis","bind","sayThanks","reviewWorkflow","getRandomParcel","getRandomSection","rotationChange","updateTimesChecked","state","updateFeature","mapRotation","that","this","randomId","objectIds","length","q","WPAMapsLandParcels","createQuery","where","queryFeatures","then","response","view","goTo","features","geometry","extent","popup","visible","setState","whenLayerView","layerView","highlightedFeature","highlight","randomSectionId","sectionsLayer","definitionExpression","when","queryExtent","queryObjectIds","newRot","oldRot","propName","ui","add","compass","remove","loadModules","css","ArcGISMap","Basemap","MapView","FeatureLayer","TileLayer","Compass","Editor","watchUtils","WPATiles","url","map","basemap","baseLayers","container","current","highlightOptions","color","fillOpacity","dockEnabled","dockOptions","buttonEnabled","breakpoint","watch","refreshButton","document","createElement","title","addEventListener","alert","template","fieldInfos","fieldName","label","actions","id","popupTemplate","formTemplate","elements","groupDisplay","on","e","updatedFeatures","editor","allowedWorkflows","supportingWidgetDefaults","featureForm","fieldConfig","name","required","layerInfos","layer","allowAttachments","deleteEnabled","postInitialize","init","messages","widgetLabel","addFeature","editFeature","viewModel","newVal","oldVal","editButton","getElementsByClassName","disabled","classList","removeAttribute","event","action","popupEnabled","upFeat","currentTimesChecked","getAttribute","setAttribute","edits","updateFeatures","applyEdits","setModalContent","openModal","setTimeout","closeModal","close","activeWorkFlow","startUpdateWorkflowAtFeatureEdit","selectedFeature","spinnerEnabled","arrComp","domNode","evt","preventDefault","ref","Component","customStyles","top","left","right","bottom","marginRight","transform","App","welcomeScreen","toggleWelcomeScreen","modalIsOpen","setIsOpen","setWorkflow","modalContent","Modal","setAppElement","isOpen","onAfterOpen","onRequestClose","style","contentLabel","onClick","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62ddb3b5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Joyride, { CallBackProps, STATUS, Step, StoreHelpers } from 'react-joyride';\r\n\r\nexport function IntroJoyride(props) {\r\n\tconst [steps, setSteps] = useState([\r\n    {\r\n      content: \r\n          <div>\r\n            <h1>Draw and transcribe map data</h1>\r\n            <div className='imgContainer'>\r\n              <img alt='Draw a shape representing a \r\n                    parcel of land and transcribe the ' \r\n                  src={process.env.PUBLIC_URL + '/img/wpa3.gif'}/>\r\n            </div>\r\n          </div>,\r\n      placement: 'auto',\r\n      target: '.drawShapes',\r\n      disableBeacon: true\r\n    },    \r\n    // {\r\n    //   content: \r\n    //       <div>\r\n    //         <h1>Draw and transcribe map data</h1>\r\n    //         <div>\r\n              \r\n    //         </div>\r\n    //       </div>,\r\n    //   placement: 'auto',\r\n    //   target: '.drawShapes',\r\n    //   disableBeacon: false\r\n    // },\r\n\r\n    {\r\n      content: \r\n      <div>\r\n        <h1>Review existing entries</h1>\r\n        <h3>If you don't see any errors, click <strong><calcite-icon scale='s' icon=\"check\"></calcite-icon>Looks Good!</strong></h3>\r\n        <div className='imgContainer'>\r\n          <img alt='Reviewing parcels' \r\n               src={process.env.PUBLIC_URL + '/img/wpa7.gif'}/>\r\n        </div>\r\n      </div>,\r\n      placement: 'auto',\r\n      target: '.reviewShapes'    \r\n    },\r\n    {\r\n      content: \r\n      <div>\r\n        <h1>Review existing entries</h1>\r\n        <h3>If you see something incorrect or missing, click <strong><calcite-icon scale='s' icon=\"pencil\"></calcite-icon>Edit feature</strong></h3>\r\n        <div className='imgContainer'>\r\n          <img alt='Reviewing parcels' \r\n               src={process.env.PUBLIC_URL + '/img/wpa8.gif'}/>\r\n        </div>\r\n      </div>,\r\n      placement: 'auto',\r\n      target: '.reviewShapes'    \r\n    },\r\n    {\r\n      content: \r\n      <>\r\n        <h3>Right click and drag to change the rotation of the map.</h3>\r\n        <div className='imgContainer'>\r\n          <img alt='Demonstration of rotating the map' \r\n               src={process.env.PUBLIC_URL + '/img/wpa4.gif'}/>\r\n        </div>\r\n        <p> Press the compass button to reset</p>\r\n      </>,\r\n      placement: 'center',\r\n      target: 'body'\r\n    }\r\n    \r\n  ]);\r\n\r\n  function handleJoyrideCallback(data) {\r\n    const { status, type } = data;\r\n    const finishedStatuses = [STATUS.FINISHED, STATUS.SKIPPED];\r\n    if (finishedStatuses.includes(status)) {\r\n      props.toggleIntro(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n   <Joyride\r\n          callback={handleJoyrideCallback}\r\n          continuous={true}\r\n          run={props.runIntro}\r\n          scrollToFirstStep={true}\r\n          showProgress={true}\r\n          showSkipButton={true}\r\n          steps={steps}\r\n          styles={{\r\n            options: {\r\n              zIndex: 10000,\r\n              width: 800\r\n            },\r\n          }}\r\n        />\r\n  )\r\n}\r\n\r\nexport default IntroJoyride;","import React from 'react';\r\nimport { loadModules } from 'esri-loader';\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport class WebMapView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.WPATilesUrl = 'https://tiles.arcgis.com/tiles/jWQlP64OuwDh6GGX/arcgis/rest/services/_wpa_all_6Aug2020/MapServer';\r\n    this.WPAMapsLandParcelsUrl = 'https://services1.arcgis.com/jWQlP64OuwDh6GGX/arcgis/rest/services/WPA_Maps_Land_Parcels_Public/FeatureServer/0';\r\n    this.sectionsLayerUrl = 'https://services1.arcgis.com/jWQlP64OuwDh6GGX/ArcGIS/rest/services/Oklahoma_Public_Land_Survey_Sections/FeatureServer/0';\r\n    this.mapRef = React.createRef();\r\n    this.workflow = props.workflow;\r\n    this.editThis = this.editThis.bind(this);\r\n    this.sayThanks = this.sayThanks.bind(this);\r\n    this.reviewWorkflow = this.reviewWorkflow.bind(this);\r\n    this.getRandomParcel = this.getRandomParcel.bind(this);\r\n    this.getRandomSection = this.getRandomSection.bind(this);\r\n    this.rotationChange = this.rotationChange.bind(this);\r\n    this.updateTimesChecked = this.updateTimesChecked.bind(this);\r\n    this.state = {\r\n                  updateFeature: null,\r\n                  mapRotation: 0\r\n                };\r\n    }\r\n\r\n  getRandomParcel() {\r\n    var that = this;\r\n    var randomId = getRandomInt(this.objectIds.length - 1);     \r\n    var q = this.WPAMapsLandParcels.createQuery();\r\n    q.where = 'OBJECTID = ' + this.objectIds[randomId];\r\n    //this.WPAMapsLandParcels.definitionExpression = 'OBJECTID = ' + this.objectIds[randomId];\r\n    this.WPAMapsLandParcels.queryFeatures(q).then((response) => {\r\n      that.view.goTo(response.features[0].geometry.extent);\r\n      that.view.popup.features = response.features;\r\n      that.view.popup.visible = true;\r\n      that.setState({updateFeature: response.features[0]});\r\n      this.view.whenLayerView(this.WPAMapsLandParcels).then(function(layerView){\r\n        that.highlightedFeature = layerView.highlight(response.features[0]);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  getRandomSection() {\r\n\r\n    var randomSectionId = getRandomInt(70915);\r\n    this.sectionsLayer.definitionExpression = 'OBJECTID = ' + randomSectionId;\r\n          \r\n    this.sectionsLayer\r\n      .when(() => {\r\n        return this.sectionsLayer.queryExtent();\r\n      })\r\n      .then((response) => {\r\n        this.view.goTo(response.extent);\r\n    })\r\n  }\r\n\r\n  reviewWorkflow() {\r\n    var that = this;    \r\n    this.WPAMapsLandParcels.queryObjectIds().then((objectIds) => {\r\n      that.objectIds = objectIds;\r\n      that.getRandomParcel();\r\n    });\r\n  }\r\n\r\n  rotationChange(newRot, oldRot, propName) {\r\n    if (oldRot === 0 && newRot !== 0) {\r\n      this.view.ui.add(this.compass, 'top-left');\r\n    }\r\n\r\n    if (oldRot !== 0 && newRot === 0) {\r\n      this.view.ui.remove(this.compass);\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\r\n    loadModules(['esri/Map', 'esri/Basemap', \r\n                 'esri/views/MapView', \r\n                 'esri/layers/FeatureLayer',\r\n                 'esri/views/layers/FeatureLayerView',\r\n                 'esri/layers/TileLayer',\r\n                 'esri/widgets/Compass',\r\n                 'esri/widgets/Editor',\r\n                 'esri/core/watchUtils',\r\n                 'esri/widgets/AreaMeasurement2D'], { css: true })\r\n    .then(([ArcGISMap, Basemap, MapView, FeatureLayer, \r\n            FeatureLayerView, TileLayer, Compass, Editor, \r\n            watchUtils, AreaMeasurement2D]) => {\r\n\r\n      const WPATiles = new TileLayer({\r\n        url: this.WPATilesUrl\r\n      })\r\n      //this.map.add(WPATiles);\r\n\r\n\r\n      this.map = new ArcGISMap({\r\n        basemap: new Basemap({baseLayers:[WPATiles]})\r\n      });\r\n\r\n      this.view = new MapView({\r\n        container: this.mapRef.current,\r\n        map: this.map,\r\n        highlightOptions: {\r\n          color: '#fe5c00',\r\n          fillOpacity: 0.1\r\n        },\r\n        popup: {\r\n          dockEnabled: true,\r\n          dockOptions: {\r\n            // Disables the dock button from the popup\r\n            buttonEnabled: false,\r\n            // Ignore the default sizes that trigger responsive docking\r\n            breakpoint: false\r\n          }\r\n        }\r\n        //center: [-98.5, 35.5],\r\n        //zoom: 8\r\n      });\r\n    \r\n      this.compass = new Compass({\r\n        view: this.view\r\n      });\r\n      \r\n      this.view.watch('rotation', this.rotationChange);\r\n\r\n      var refreshButton = document.createElement('div');\r\n\r\n      refreshButton.className = 'esri-icon-refresh esri-widget--button esri-widget esri-interactive ';\r\n      refreshButton.title = this.workflow === 'create' ? \r\n            'Go to another random section.' : \r\n            'Get another entry to review.';\r\n      refreshButton.addEventListener('click', () => {\r\n        switch (this.workflow) {\r\n          case 'create': \r\n            this.getRandomSection();\r\n            break;\r\n          case 'update':\r\n            this.getRandomParcel();\r\n            break;\r\n          default:\r\n            alert('moo');\r\n        }\r\n      });\r\n\r\n      this.view.ui.add(refreshButton, 'bottom-left');\r\n\r\n      //measurement widget, but let's not use it for now\r\n      /*\r\n      this.measurement = new AreaMeasurement2D({\r\n        view: this.view,\r\n        activeTool: 'area',\r\n        unit: 'acres'\r\n      });\r\n\r\n      this.view.ui.add(this.measurement, 'bottom-left');\r\n      */\r\n\r\n      const editThisAction = {\r\n          title: 'Edit feature',\r\n          id: 'edit-this',\r\n          className: 'esri-icon-edit'\r\n        };\r\n\r\n      const thisLooksOkAction = {\r\n          title: 'Looks good!',\r\n          id: 'this-looks-ok',\r\n          className: 'esri-icon-check-mark'\r\n        };\r\n\r\n      const template = {\r\n        title: 'Please doublecheck the info below.',\r\n        content: [\r\n          {\r\n            type: 'fields',\r\n            fieldInfos: [\r\n              {\r\n                fieldName: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)'\r\n              },\r\n\r\n              {\r\n                fieldName: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)'\r\n              },   \r\n              {\r\n                fieldName: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)'\r\n              },\r\n              {\r\n                fieldName: 'LandValue',\r\n                label: 'Land Value'\r\n              },\r\n              {\r\n                fieldName: 'ImprovementsValue2',\r\n                label: 'Improvements Value'\r\n              },\r\n              {\r\n                fieldName: 'TaxExempt',\r\n                label: 'Marked with an X?'\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        //overwriteActions: true,\r\n        actions: [thisLooksOkAction, editThisAction]\r\n      }\r\n\r\n      const formTemplate = {\r\n        title: 'Land Info',\r\n        elements: [{ // Autocasts to new GroupElement\r\n          type: 'group',\r\n          label: 'Owner Information',\r\n          elements: [\r\n              {\r\n                type: 'field',\r\n                fieldName: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)'\r\n              },\r\n\r\n              {\r\n                type: 'field',\r\n                fieldName: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)'\r\n              },   \r\n              {\r\n                type: 'field',\r\n                fieldName: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)'\r\n              }\r\n              \r\n           \r\n          ]\r\n        },\r\n\r\n        { // Autocasts to new GroupElement\r\n          type: 'group',\r\n          label: 'Land and Improvement Valuation',\r\n          elements: [\r\n             {\r\n                type: 'field',\r\n                fieldName: 'LandValue',\r\n                label: 'Land Value'\r\n              },\r\n              {\r\n                type: 'field',\r\n                fieldName: 'ImprovementsValue2',\r\n                label: 'Improvements Value'\r\n              },\r\n          ]\r\n        },\r\n\r\n           {\r\n                type: 'field',\r\n                fieldName: 'TaxExempt',\r\n                label: 'Marked with an X?'\r\n              }\r\n\r\n        ]\r\n      }\r\n\r\n      this.WPAMapsLandParcels = new FeatureLayer({\r\n        url: this.WPAMapsLandParcelsUrl,\r\n        popupTemplate: template,\r\n        formTemplate: formTemplate,\r\n        groupDisplay: 'sequential'\r\n      });\r\n\r\n      \r\n      this.WPAMapsLandParcels.on('edits', (e) => {\r\n        if (e.updatedFeatures.length > 0) {\r\n          this.sayThanks();\r\n          this.view.ui.remove(this.editor);\r\n        }\r\n      } );\r\n\r\n      this.editor = new Editor({\r\n          view: this.view,\r\n          allowedWorkflows: [this.workflow],\r\n          supportingWidgetDefaults: {\r\n            featureForm: {\r\n              groupDisplay: 'sequential',\r\n              fieldConfig: [\r\n              {\r\n                name: 'OwnerLastName',\r\n                label: 'Owner\\'s Last Name (if an individual)',\r\n                required: false\r\n              },\r\n\r\n              {\r\n                name: 'OwnerFirstNameAndMI',\r\n                label: 'Owner\\'s First Name or initials (if an individual)',\r\n                required: false\r\n              },   \r\n              {\r\n                name: 'OwnerOrgName',\r\n                label: 'Owner (if an entity or organization)',\r\n                required: false\r\n              },\r\n              {\r\n                name: 'LandValue',\r\n                label: 'Land Value',\r\n                required: false\r\n              },\r\n              {\r\n                name: 'ImprovementsValue2',\r\n                label: 'Improvements Value',\r\n                required: false\r\n              },\r\n             {\r\n                name: 'TaxExempt',\r\n                label: 'Marked with an X?',\r\n                required: false\r\n              }\r\n            ],\r\n            }\r\n          },\r\n          layerInfos: [{\r\n            view: this.view,\r\n            layer: this.WPAMapsLandParcels,\r\n            //fieldConfig: \r\n            allowAttachments: false,\r\n            deleteEnabled: false\r\n          }]\r\n        });\r\n\r\n\r\n      // I can't believe this is the only way to override widget labelling, but here we are\r\n      this.editor.postInitialize = function(){\r\n        watchUtils.init(this,'messages', (messages) => {\r\n          messages.widgetLabel = 'WPA Maps';\r\n          messages.addFeature = 'Draw a new shape';\r\n          messages.editFeature = 'Review an existing record';\r\n        });\r\n      };\r\n\r\n      //an attempt to prevent identical features from being created due to lack of feedback\r\n      //from the editor widget\r\n      this.editor.viewModel.watch('syncing', function(newVal,oldVal, propName, target){\r\n        let editButton = document.getElementsByClassName('esri-editor__control-button');\r\n        if (editButton.length === 0){\r\n          return;\r\n        }\r\n        \r\n        if (newVal === true) {\r\n          \r\n          editButton[0].disabled = 'disabled';\r\n          editButton[0].classList.add('esri-button--disabled');\r\n        }\r\n          \r\n        if (newVal === false) {\r\n\r\n          editButton[0].removeAttribute('disabled');\r\n          editButton[0].classList.remove('esri-button--disabled');\r\n        }\r\n      })\r\n\r\n      // Event handler that fires each time an action is clicked\r\n      var that = this;\r\n      this.view.popup.on('trigger-action', function (event) {\r\n            if (event.action.id === 'edit-this') {\r\n              that.editThis();\r\n            }\r\n\r\n            if (event.action.id === 'this-looks-ok'){\r\n              that.updateTimesChecked();\r\n            }\r\n\r\n          });   \r\n\r\n      // for creation, pick a random PLSS Section and zoom to it\r\n      if (this.workflow === 'create') {\r\n          \r\n          this.sectionsLayer = new FeatureLayer({\r\n            url: this.sectionsLayerUrl\r\n          });\r\n\r\n          this.getRandomSection();\r\n          this.map.add(this.sectionsLayer);\r\n          this.WPAMapsLandParcels.popupEnabled = false;\r\n          this.view.ui.add(this.editor, 'bottom-right');\r\n          //this.editor.startCreateWorkflowAtFeatureCreation({layer: WPAMapsLandParcels, template: template});\r\n      }\r\n\r\n      // for reviewing, pick a random polygon and zoom to it\r\n      if (this.workflow === 'update') {\r\n        this.reviewWorkflow();\r\n      }\r\n\r\n      this.map.add(this.WPAMapsLandParcels);\r\n\r\n      //this.view.ui.add(this.editor, 'top-right');\r\n      });\r\n  }\r\n\r\n  updateTimesChecked() {\r\n    var upFeat = this.state.updateFeature;\r\n    var currentTimesChecked = upFeat.getAttribute('timesChecked');\r\n    upFeat.setAttribute('timesChecked', currentTimesChecked + 1);\r\n    var edits = {updateFeatures: [upFeat]};\r\n    this.WPAMapsLandParcels.applyEdits(edits);\r\n    this.highlightedFeature.remove();\r\n  }\r\n\r\n  sayThanks() {\r\n    var that = this;\r\n\r\n    this.props.setModalContent(\r\n      <div>\r\n        <h1>Thank you!</h1>\r\n        <p>Here's another entry to check.</p>\r\n      </div>\r\n    );\r\n    this.props.openModal();\r\n    setTimeout(function(){\r\n      that.props.closeModal(); \r\n      }, 2000);\r\n\r\n    this.highlightedFeature.remove();\r\n    this.getRandomParcel();\r\n    this.view.popup.close();\r\n  }\r\n  editThis() {\r\n        var view = this.view;\r\n        var editor = this.editor; \r\n        view.when(function () {\r\n\r\n            // If the EditorViewModel's activeWorkflow is null, make the popup not visible\r\n            if (!editor.viewModel.activeWorkFlow) {\r\n              view.popup.visible = false;\r\n              // Call the Editor update feature edit workflow\r\n              editor.startUpdateWorkflowAtFeatureEdit(\r\n                view.popup.selectedFeature\r\n              );\r\n              view.ui.add(editor, 'bottom-right');\r\n              view.popup.spinnerEnabled = false;\r\n            }\r\n\r\n            // We need to set a timeout to ensure the editor widget is fully rendered. We\r\n            // then grab it from the DOM stack\r\n            setTimeout(function () {\r\n              // Use the editor's back button as a way to cancel out of editing\r\n              let arrComp = editor.domNode.getElementsByClassName(\r\n                'esri-editor__back-button esri-interactive'\r\n              );\r\n              if (arrComp.length === 1) {\r\n                // Add a tooltip for the back button\r\n                arrComp[0].setAttribute(\r\n                  'title',\r\n                  'Cancel edits, return to popup'\r\n                );\r\n                // Add a listerner to listen for when the editor's back button is clicked\r\n                arrComp[0].addEventListener('click', function (evt) {\r\n                  // Prevent the default behavior for the back button and instead remove the editor and reopen the popup\r\n                  evt.preventDefault();\r\n                  view.ui.remove(editor);\r\n                  // view.popup.open({\r\n                  //   features: features\r\n                  // });\r\n                });\r\n              }\r\n            }, 150);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n  componentWillUnmount() {\r\n    if (this.view) {\r\n      // destroy the map view\r\n      this.view.container = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='webmap' ref={this.mapRef} />\r\n      </>\r\n    );\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { IntroJoyride } from './IntroJoyride';\r\nimport { WebMapView } from './WebMapView';\r\nimport \"@esri/calcite-components\";\r\nimport './App.css';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [welcomeScreen, toggleWelcomeScreen] = useState(true);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [workflow, setWorkflow] = useState(0);\r\n  const [modalContent, setModalContent] = useState('');\r\n  const [runIntro, toggleIntro] = useState(false);\r\n  \r\n\r\n  Modal.setAppElement('#root');\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    //subtitle.style.color = '#f00';\r\n  }\r\n\r\n  function closeModal(){\r\n    setIsOpen(false);\r\n  }\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <IntroJoyride\r\n          runIntro={runIntro}\r\n          toggleIntro={toggleIntro}\r\n        />\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          {modalContent}\r\n        </Modal>\r\n\r\n        {welcomeScreen === true &&\r\n          <>\r\n            <h1>Choose your path:</h1>\r\n            \r\n            <button className='drawShapes' onClick={() => {toggleWelcomeScreen(false); setWorkflow('create')}}>\r\n                <calcite-icon scale='l' class=\"big-icon\" icon=\"addInNew\"></calcite-icon> \r\n                <br/>Draw some shapes\r\n            </button>\r\n            <h2>or</h2>\r\n            <button className='reviewShapes' onClick={() => {toggleWelcomeScreen(false); setWorkflow('update')}}>\r\n                <calcite-icon scale='l' class=\"big-icon\" icon=\"editAttributes\"></calcite-icon> \r\n                <br/>Review existing shapes\r\n            </button>\r\n            <h2>or</h2>\r\n            <button onClick={() => {toggleIntro(!runIntro)}}>\r\n                <calcite-icon scale='l' class=\"big-icon\" icon=\"question\"></calcite-icon> \r\n                <br/>View the intro\r\n            </button>\r\n          </>\r\n        }\r\n        \r\n        {welcomeScreen === false &&\r\n          <WebMapView \r\n            workflow={workflow} \r\n            openModal={openModal}\r\n            closeModal={closeModal}\r\n            setModalContent={setModalContent}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}